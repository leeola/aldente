# provider creates new machines or provides implementations of existing machines.
[[provider]]
# The name of the provider allows machines to refer to this specific providers
# configuration. For example, AWS-Large, or DigitalOceanMedium would be a name
# referring to how this provider is configured.
name = "repo provider"

# The type of the provider identifies the actual code that will be implementing
# this provider. Run `aldente providers --registered` to see the specific
# providers that are available currently.
type = "local"

# normally providers describe the size of the machine, but in the case of the
# local provider it describes the location on the filesystem.
[[provider]]
name = "examples provider"
type = "local"
workdir = "./_examples"

# a machine is provided by the provider and is the basis for provisioning and
# running commands.
#
# Note that all configuration of the specific machine is done by the provider
# configuration. This machine section just describes machines within your
# deployment stack, or machine group in aldente terms.
[[machine]]
name = "repo"
provider = "repo provider"

[[machine]]
name = "example"
provider = "examples provider"

# a command is a script or executable to run the given machines.
[[command]]
name = "hello"
# commands must be configured to run on specified machines.
machines = ["repo"]
# the script is uploaded and run on whatever machines are specified
# in the machine list.
script = 'echo hello world'

[[command]]
name = "ls"
machines = ["repo", "example"]
# scripts can be multiline.
script = '''
pwd
ls -la
'''



# Finally, aldente requires some mechanism to persist information about machines,
# eg, a database. This configuration can specify any of the supported databases,
# to store basic data like groups created, ips of created machines, auth, etc.
[marshalDatabase]
Path = "_examples/tmp/commands.db"

# kak: filetype=ini
